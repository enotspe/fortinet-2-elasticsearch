#                                    __   __  __
#                                    \ \ / / / /
#                                     \ V / / /
#                                      \_/  \/
#
#                                    V E C T O R
#                                   Configuration
#
# ------------------------------------------------------------------------------
# Website: https://vector.dev
# Docs: https://vector.dev/docs
# Chat: https://chat.vector.dev
# ------------------------------------------------------------------------------

# Change this to use a non-default directory for Vector data storage:
# data_dir: "/var/lib/vector"

# Random Syslog-formatted logs
sources:

  syslog_panos:
    type: "syslog"
    address: 0.0.0.0:${PANOS_SYSLOG_UDP_PORT:-5140}
    mode: "udp"

#enrichment_tables:
#  iana_number:
#    type: "file"
#    file:
#      path: "/etc/vector/iana_number.csv"
#      encoding:
#        type: "csv"
#    schema:
#      Decimal: "integer"
#      Keyword: "string"

transforms:

  remap_pan:
    type: "remap"
    inputs: ["syslog_panos" ]
    source: |
      # Rename syslog fields from "."
      .log.syslog.facility.name = del(.facility)
      .log.source.address = del(.source_ip)
      .log.syslog.hostname = del(.hostname)
      .log.syslog.host = del(.host)
      .log.syslog.severity.name = del(.severity)
      .log.syslog.version = del(.version)
      .log.logger = del(.source_type)
      .log.syslog.procid = del(.procid)
      .log.syslog.appname = del(.appname)

      # For Elasticsearch
      #.@timestamp = del(.timestamp) # not necessary https://vector.dev/docs/reference/configuration/sinks/elasticsearch/#mode

      .observer.hostname = .log.syslog.hostname
      .observer.name = .log.syslog.host
      .observer.product = "PanOS"
      .observer.type = "firewall"
      .observer.vendor = "Palo Alto"

      # parse values from message
      panos_values_array = parse_csv(.message) ?? null

      # https://docs.paloaltonetworks.com/pan-os/10-2/pan-os-admin/monitoring/use-syslog-for-monitoring/syslog-field-descriptions/traffic-log-fields
      #traffic_keys = "Receive Time, Serial Number, Type, Threat/Content Type, FUTURE_USE, Generated Time, Source Address, Destination Address, NAT Source IP, NAT Destination IP, Rule Name, Source User, Destination User, Application, Virtual System, Source Zone, Destination Zone, Inbound Interface, Outbound Interface, Log Action, FUTURE_USE, Session ID, Repeat Count, Source Port, Destination Port, NAT Source Port, NAT Destination Port, Flags, Protocol, Action, Bytes, Bytes Sent, Bytes Received, Packets, Start Time, Elapsed Time, Category, FUTURE_USE, Sequence Number, Action Flags, Source Country, Destination Country, FUTURE_USE, Packets Sent, Packets Received, Session End Reason, Device Group Hierarchy Level 1, Device Group Hierarchy Level 2, Device Group Hierarchy Level 3, Device Group Hierarchy Level 4, Virtual System Name, Device Name, Action Source, Source VM UUID, Destination VM UUID, Tunnel ID/IMSI, Monitor Tag/IMEI, Parent Session ID, Parent Start Time, Tunnel Type, SCTP Association ID, SCTP Chunks, SCTP Chunks Sent, SCTP Chunks Received, Rule UUID, HTTP/2 Connection, App Flap Count, Policy ID, Link Switches, SD-WAN Cluster, SD-WAN Device Type, SD-WAN Cluster Type, SD-WAN Site, Dynamic User Group Name, XFF Address, Source Device Category, Source Device Profile, Source Device Model, Source Device Vendor, Source Device OS Family, Source Device OS Version, Source Hostname, Source Mac Address, Destination Device Category, Destination Device Profile, Destination Device Model, Destination Device Vendor, Destination Device OS Family, Destination Device OS Version, Destination Hostname, Destination Mac Address, Container ID, POD Namespace, POD Name, Source External Dynamic List, Destination External Dynamic List, Host ID, Serial Number, Source Dynamic Address Group, Destination Dynamic Address Group, Session Owner, High Resolution Timestamp, A Slice Service Type, A Slice Differentiator, Application Subcategory, Application Category, Application Technology, Application Risk, Application Characteristic, Application Container, Tunneled Application, Application SaaS, Application Sanctioned State, Offloaded"
      #.traffic_keys = downcase(traffic_keys)
      #.traffic_keys_array = parse_csv!(.traffic_keys)
      #.traffic_keys_array = map_values(.traffic_keys_array) -> |value| { strip_whitespace!(value) }
      #.traffic_keys_array = map_values(.traffic_keys_array) -> |value| { replace(value, " ", "_") }

      traffic_keys_array  = ["receive_time","serial_number","type","threat/content_type","future_use","generated_time","source_address","destination_address","nat_source_ip","nat_destination_ip","rule_name","source_user","destination_user","application","virtual_system","source_zone","destination_zone","inbound_interface","outbound_interface","log_action","future_use","session_id","repeat_count","source_port","destination_port","nat_source_port","nat_destination_port","flags","protocol","action","bytes","bytes_sent","bytes_received","packets","start_time","elapsed_time","category","future_use","sequence_number","action_flags","source_country","destination_country","future_use","packets_sent","packets_received","session_end_reason","device_group_hierarchy_level_1","device_group_hierarchy_level_2","device_group_hierarchy_level_3","device_group_hierarchy_level_4","virtual_system_name","device_name","action_source","source_vm_uuid","destination_vm_uuid","tunnel_id/imsi","monitor_tag/imei","parent_session_id","parent_start_time","tunnel_type","sctp_association_id","sctp_chunks","sctp_chunks_sent","sctp_chunks_received","rule_uuid","http/2_connection","app_flap_count","policy_id","link_switches","sd-wan_cluster","sd-wan_device_type","sd-wan_cluster_type","sd-wan_site","dynamic_user_group_name","xff_address","source_device_category","source_device_profile","source_device_model","source_device_vendor","source_device_os_family","source_device_os_version","source_hostname","source_mac_address","destination_device_category","destination_device_profile","destination_device_model","destination_device_vendor","destination_device_os_family","destination_device_os_version","destination_hostname","destination_mac_address","container_id","pod_namespace","pod_name","source_external_dynamic_list","destination_external_dynamic_list","host_id","serial_number","source_dynamic_address_group","destination_dynamic_address_group","session_owner","high_resolution_timestamp","a_slice_service_type","a_slice_differentiator","application_subcategory","application_category","application_technology","application_risk","application_characteristic","application_container","tunneled_application","application_saas","application_sanctioned_state","offloaded"]

      threat_keys_array = ["receive_time","serial_number","type","threat/content_type","future_use","generated_time","source_address","destination_address","nat_source_ip","nat_destination_ip","rule_name","source_user","destination_user","application","virtual_system","source_zone","destination_zone","inbound_interface","outbound_interface","log_action","future_use","session_id","repeat_count","source_port","destination_port","nat_source_port","nat_destination_port","flags","ip_protocol","action","url/filename","threat_id","category","severity","direction","sequence_number","action_flags","source_location","destination_location","future_use","content_type","pcap_id","file_digest","cloud","url_index","user_agent","file_type","x-forwarded-for","referer","sender","subject","recipient","report_id","device_group_hierarchy_level_1","device_group_hierarchy_level_2","device_group_hierarchy_level_3","device_group_hierarchy_level_4","virtual_system_name","device_name","future_use","source_vm_uuid","destination_vm_uuid","http_method","tunnel_id/imsi","monitor_tag/imei","parent_session_id","parent_start_time","tunnel_type","threat_category","content_version","future_use","sctp_association_id","payload_protocol_id","http_headers","url_category_list","rule_uuid","http/2_connection","dynamic_user_group_name","xff_address","source_device_category","source_device_profile","source_device_model","source_device_vendor","source_device_os_family","source_device_os_version","source_hostname","source_mac_address","destination_device_category","destination_device_profile","destination_device_model","destination_device_vendor","destination_device_os_family","destination_device_os_version","destination_hostname","destination_mac_address","container_id","pod_namespace","pod_name","source_external_dynamic_list","destination_external_dynamic_list","host_id","serial_number","domain_edl","source_dynamic_address_group","destination_dynamic_address_group","partial_hash","high_resolution_timestamp","reason","justification","a_slice_service_type","application_subcategory","application_category","application_technology","application_risk","application_characteristic","application_container","tunneled_application","application_saas","application_sanctioned_state","cloud_report_id","cluster_name","flow_type"]

      url_keys_array = ["receive_time","serial_number","type","threat/content_type","future_use","generated_time","source_address","destination_address","nat_source_ip","nat_destination_ip","rule_name","source_user","destination_user","application","virtual_system","source_zone","destination_zone","inbound_interface","outbound_interface","log_action","future_use","session_id","repeat_count","source_port","destination_port","nat_source_port","nat_destination_port","flags","ip_protocol","action","url/filename","threat_id","category","severity","direction","sequence_number","action_flags","source_country","destination_country","future_use","content_type","pcap_id","file_digest","cloud","url_index","user_agent","file_type","x-forwarded-for","referer","sender","subject","recipient","report_id","device_group_hierarchy_level_1","device_group_hierarchy_level_2","device_group_hierarchy_level_3","device_group_hierarchy_level_4","virtual_system_name","device_name","future_use","source_vm_uuid","destination_vm_uuid","http_method","tunnel_id/imsi","monitor_tag/imei","parent_session_id","parent_start_time","tunnel_type","threat_category","content_version","future_use","sctp_association_id","payload_protocol_id","http_headers","url_category_list","rule_uuid","http/2_connection","dynamic_user_group_name","xff_address","source_device_category","source_device_profile","source_device_model","source_device_vendor","source_device_os_family","source_device_os_version","source_hostname","source_mac_address","destination_device_category","destination_device_profile","destination_device_model","destination_device_vendor","destination_device_os_family","destination_device_os_version","destination_hostname","destination_mac_address","container_id","pod_namespace","pod_name","source_external_dynamic_list","destination_external_dynamic_list","host_id","serial_number","domain_edl","source_dynamic_address_group","destination_dynamic_address_group","partial_hash","high_resolution_timestamp","reason","justification","a_slice_service_type","application_subcategory","application_category","application_technology","application_risk","application_characteristic","application_container","tunneled_application","application_saas","application_sanctioned_state","cloud_report_id","cluster_name","flow_type"]

      data_keys_array = ["receive_time","serial_number","type","threat/content_type","future_use","generated_time","source_address","destination_address","nat_source_ip","nat_destination_ip","rule_name","source_user","destination_user","application","virtual_system","source_zone","destination_zone","inbound_interface","outbound_interface","log_action","future_use","session_id","repeat_count","source_port","destination_port","nat_source_port","nat_destination_port","flags","ip_protocol","action","url/filename","threat_id","category","severity","direction","sequence_number","action_flags","source_country","destination_country","future_use","content_type","pcap_id","file_digest","cloud","url_index","user_agent","file_type","x-forwarded-for","referer","sender","subject","recipient","report_id","device_group_hierarchy_level_1","device_group_hierarchy_level_2","device_group_hierarchy_level_3","device_group_hierarchy_level_4","virtual_system_name","device_name","future_use","source_vm_uuid","destination_vm_uuid","http_method","tunnel_id/imsi","monitor_tag/imei","parent_session_id","parent_start_time","tunnel_type","threat_category","content_version","future_use","sctp_association_id","payload_protocol_id","http_headers","url_category_list","rule_uuid","http/2_connection","dynamic_user_group_name","xff_address","source_device_category","source_device_profile","source_device_model","source_device_vendor","source_device_os_family","source_device_os_version","source_hostname","source_mac_address","destination_device_category","destination_device_profile","destination_device_model","destination_device_vendor","destination_device_os_family","destination_device_os_version","destination_hostname","destination_mac_address","container_id","pod_namespace","pod_name","source_external_dynamic_list","destination_external_dynamic_list","host_id","serial_number","domain_edl","source_dynamic_address_group","destination_dynamic_address_group","partial_hash","high_resolution_timestamp","reason","justification","a_slice_service_type","application_subcategory","application_category","application_technology","application_risk","application_characteristic","application_container","tunneled_application","application_saas","application_sanctioned_state","cloud_report_id","cluster_name","flow_type"]

      hip_keys_array = ["receive_time","serial_number","type","threat/content_type","future_use","generated_time","source_user","virtual_system","machine_name","operating_system","source_address","hip","repeat_count","hip_type","future_use","future_use","sequence_number","action_flags","device_group_hierarchy_level_1","device_group_hierarchy_level_2","device_group_hierarchy_level_3","device_group_hierarchy_level_4","virtual_system_name","device_name","virtual_system_id","ipv6_source_address","host_id","user_device_serial_number","device_mac_address","high_resolution_timestamp","cluster_name"]

      globalprotect_keys_array = ["receive_time","serial_number","type","threat/content_type","future_use","generated_time","virtual_system","event_id","stage","authentication_method","tunnel_type","source_user","source_region","machine_name","public_ip","public_ipv6","private_ip","private_ipv6","host_id","serial_number","client_version","client_os","client_os_version","repeat_count","reason","error","description","status","location","login_duration","connect_method","error_code","portal","sequence_number","action_flags","high_res_timestamp","selection_type","response_time","priority","attempted_gateways","gateway","device_group_hierarchy_level_1","device_group_hierarchy_level_2","device_group_hierarchy_level_3","device_group_hierarchy_level_4","virtual_system_name","device_name","virtual_system_id","cluster_name"]

      iptag_keys_array = ["receive_time","serial","type","threat/content_type","future_use","generate_time","virtual_system","source_ip","tag_name","event_id","repeat_count","timeout","data_source_name","data_source_type","data_source_subtype","sequence_number","action_flags","dg_hierarchy_level_1","dg_hierarchy_level_2","dg_hierarchy_level_3","dg_hierarchy_level_4","virtual_system_name","device_name","virtual_system_id","high_resolution_timestamp","cluster_name"]

      userid_keys_array = ["receive_time","serial_number","type","threat/content_type","future_use","generated_time","virtual_system","source_ip","user","data_source_name","event_id","repeat_count","time_out_threshold","source_port","destination_port","data_source","data_source_type","sequence_number","action_flags","device_group_hierarchy_level_1","device_group_hierarchy_level_2","device_group_hierarchy_level_3","device_group_hierarchy_level_4","virtual_system_name","device_name","virtual_system_id","factor_type","factor_completion_time","factor_number","user_group_flags","user_by_source","tag_name","high_resolution_timestamp","origin_data_source","future_use","cluster_name"]

      decryption_keys_array = ["receive_time","serial_number","type","threat/content_type","config_version","generate_time","source_address","destination_address","nat_source_ip","nat_destination_ip","rule","source_user","destination_user","application","virtual_system","source_zone","destination_zone","inbound_interface","outbound_interface","log_action","time_logged","session_id","repeat_count","source_port","destination_port","nat_source_port","nat_destination_port","flags","ip_protocol","action","tunnel","future_use","future_use","source_vm_uuid","destination_vm_uuid","uuid_for_rule","stage_for_client_to_firewall","stage_for_firewall_to_server","tls_version","key_exchange_algorithm","encryption_algorithm","hash_algorithm","policy_name","elliptic_curve","error_index","root_status","chain_status","proxy_type","certificate_serial_number","fingerprint","certificate_start_date","certificate_end_date","certificate_version","certificate_size","common_name_length","issuer_common_name_length","root_common_name_length","sni_length","certificate_flags","subject_common_name","issuer_subject_common_name","root_subject_common_name","server_name_indication","error","container_id","pod_namespace","pod_name","source_external_dynamic_list","destination_external_dynamic_list","source_dynamic_address_group","destination_dynamic_address_group","high_res_timestamp","source_device_category","source_device_profile","source_device_model","source_device_vendor","source_device_os_family","source_device_os_version","source_hostname","source_mac_address","destination_device_category","destination_device_profile","destination_device_model","destination_device_vendor","destination_device_os_family","destination_device_os_version","destination_hostname","destination_mac_address","sequence_number","action_flags","device_group_hierarchy_level_1","device_group_hierarchy_level_2","device_group_hierarchy_level_3","device_group_hierarchy_level_4","virtual_system_name","device_name","virtual_system_id","application_subcategory","application_category","application_technology","application_risk","application_characteristic","application_container","application_saas","application_sanctioned_state","cluster_name"]

      tunnelinspection_keys_array = ["receive_time","serial_number","type","subtype","future_use","generated_time","source_address","destination_address","nat_source_ip","nat_destination_ip","rule_name","source_user","destination_user","application","virtual_system","source_zone","destination_zone","inbound_interface","outbound_interface","log_action","future_use","session_id","repeat_count","source_port","destination_port","nat_source_port","nat_destination_port","flags","protocol","action","severity","sequence_number","action_flags","source_location","destination_location","device_group_hierarchy_level_1","device_group_hierarchy_level_2","device_group_hierarchy_level_3","device_group_hierarchy_level_4","virtual_system_name","device_name","tunnel_id/imsi","monitor_tag/imei","parent_session_id","parent_start_time","tunnel","bytes","bytes_sent","bytes_received","packets","packets_sent","packets_received","maximum_encapsulation","unknown_protocol","strict_check","tunnel_fragment","sessions_created","sessions_closed","session_end_reason","action_source","start_time","elapsed_time","tunnel_inspection_rule","remote_user_ip","remote_user_id","rule_uuid","pcap_id","dynamic_user_group","source_external_dynamic_list","destination_external_dynamic_list","high_resolution_timestamp","a_slice_differentiator","a_slice_service_type","pdu_session_id","application_subcategory","application_category","application_technology","application_risk","application_characteristic","application_container","application_saas","application_sanctioned_state","cluster_name"]

      sctp_keys_array = ["receive_time","serial_number","type","future_use","future_use","generated_time","source_address","destination_address","future_use","future_use","rule_name","future_use","future_use","future_use","virtual_system","source_zone","destination_zone","inbound_interface","outbound_interface","log_action","future_use","session_id","repeat_count","source_port","destination_port","future_use","future_use","future_use","future_use","ip_protocol","action","device_group_hierarchy_level_1","device_group_hierarchy_level_2","device_group_hierarchy_level_3","device_group_hierarchy_level_4","virtual_system_name","device_name","sequence_number","future_use","sctp_association_id","payload_protocol_id","severity","sctp_chunk_type","future_use","sctp_verification_tag_1","sctp_verification_tag_2","sctp_cause_code","diameter_app_id","diameter_command_code","diameter_avp_code","sctp_stream_id","sctp_association_end_reason","op_code","sccp_calling_party_ssn","sccp_calling_party_global_title","sctp_filter","sctp_chunks","sctp_chunks_sent","sctp_chunks_received","packets","packets_sent","packets_received","uuid_for_rule","high_resolution_timestamp"]

      authentication_keys_array = ["receive_time","serial_number","type","threat/content_type","future_use","generated_time","virtual_system","source_ip","user","normalize_user","object","authentication_policy","repeat_count","authentication_id","vendor","log_action","server_profile","description","client_type","event_type","factor_number","sequence_number","action_flags","device_group_hierarchy_1","device_group_hierarchy_2","device_group_hierarchy_3","device_group_hierarchy_4","virtual_system_name","device_name","virtual_system_id","authentication_protocol","uuid_for_rule","high_resolution_timestamp","source_device_category","source_device_profile","source_device_model","source_device_vendor","source_device_os_family","source_device_os_version","source_hostname","source_mac_address","region","future_use","user_agent","session_id","cluster_name"]

      config_keys_array = ["receive_time","serial_number","type","subtype","future_use","generated_time","host","virtual_system","command","admin","client","result","configuration_path","before_change_detail","after_change_detail","sequence_number","action_flags","device_group_hierarchy_level_1","device_group_hierarchy_level_2","device_group_hierarchy_level_3","device_group_hierarchy_level_4","virtual_system_name","device_name","device_group","audit_comment","future_use","high_resolution_timestamp"]

      system_keys_array = ["receive_time","serial_number","type","content/threat_type","future_use","generated_time","virtual_system","event_id","object","future_use","future_use","module","severity","description","sequence_number","action_flags","device_group_hierarchy_level_1","device_group_hierarchy_level_2","device_group_hierarchy_level_3","device_group_hierarchy_level_4","virtual_system_name","device_name","future_use","future_use","high_resolution_timestamp"]

      correlated_keys_array = ["receive_time","serial_number","type","content/threat_type","future_use","generated_time","source_address._source_user","virtual_system","category","severity","device_group_hierarchy_level_1","device_group_hierarchy_level_2","device_group_hierarchy_level_3","device_group_hierarchy_level_4","virtual_system_name","device_name","virtual_system_id","object_name","object_id","evidence"]

      gtp_keys_array = ["receive_time","serial_number","type","threat/content_type","future_use","generated_time","source_address","destination_address","future_use","future_use","rule_name","future_use","future_use","application","virtual_system","source_zone","destination_zone","inbound_interface","outbound_interface","log_action","future_use","session_id","future_use","source_port","destination_port","future_use","future_use","future_use","protocol","action","gtp_event_type","msisdn","access_point_name","radio_access_technology","gtp_message_type","end_user_ip_address","tunnel_endpoint_identifier1","tunnel_endpoint_identifier2","gtp_interface","gtp_cause","severity","serving_country_mcc","serving_network_mnc","area_code","cell_id","gtp_event_code","future_use","future_use","source_location","destination_location","future_use","future_use","future_use","future_use","future_use","future_use","future_use","tunnel_id/imsi","monitor_tag/imei","future_use","future_use","future_use","future_use","future_use","future_use","future_use","future_use","future_use","future_use","future_use","future_use","future_use","future_use","future_use","future_use","start_time","elapsed_time","tunnel_inspection_rule","remote_user_ip","remote_user_id","uuid_for_rule","pcap_id","high_resolution_timestamp","a_slice_service_type","a_slice_differentiator","application_subcategory","application_category","application_technology","application_risk","application_characteristic","application_container","application_saas","application_sanctioned_state"]


      # panos_values_array[2] is "type" in all PANOS logs
      # panos_values_array[3] is "subtype" in all PANOS logs
      if panos_values_array[2] == "TRAFFIC" {
        .panos = object_from_array(panos_values_array, keys: traffic_keys_array) ?? null
      } else if panos_values_array[2] == "THREAT" {
        .panos = object_from_array(panos_values_array, keys: threat_keys_array) ?? null
      } else if panos_values_array[2] == "HIP-MATCH" {
        .panos = object_from_array(panos_values_array, keys: hip_keys_array) ?? null
      } else if panos_values_array[2] == "GLOBALPROTECT" {
        .panos = object_from_array(panos_values_array, keys: globalprotect_keys_array) ?? null
      } else if panos_values_array[2] == "IPTAG" {
        .panos = object_from_array(panos_values_array, keys: iptag_keys_array) ?? null
      } else if panos_values_array[2] == "USERID" {
        .panos = object_from_array(panos_values_array, keys: userid_keys_array) ?? null
      } else if panos_values_array[2] == "DECRYPTION" {
        .panos = object_from_array(panos_values_array, keys: decryption_keys_array) ?? null
      } else if panos_values_array[2] == "START" {
        .panos = object_from_array(panos_values_array, keys: tunnelinspection_keys_array) ?? null
      } else if panos_values_array[2] == "SCTP" {
        .panos = object_from_array(panos_values_array, keys: sctp_keys_array) ?? null
      } else if panos_values_array[2] == "AUTHENTICATION" {
        .panos = object_from_array(panos_values_array, keys: authentication_keys_array) ?? null
      } else if panos_values_array[2] == "CONFIG" {
        .panos = object_from_array(panos_values_array, keys: config_keys_array) ?? null
      } else if panos_values_array[2] == "SYSTEM" {
        .panos = object_from_array(panos_values_array, keys: system_keys_array) ?? null
      } else if panos_values_array[2] == "CORRELATION" {
        .panos = object_from_array(panos_values_array, keys: correlated_keys_array) ?? null
      } else if panos_values_array[2] == "GTP" {
        .panos = object_from_array(panos_values_array, keys: gtp_keys_array) ?? null
      }

      #timesptamp
      #.network.transport = to_string(.panos.protocol) ?? to_string(.panos.ip_protocol) ?? null
      .timestamp = to_string(.panos.high_resolution_timestamp) ?? to_string(.panos.high_res_timestamp) ?? now()

      # source
      .source.ip = .panos.source_address
      .source.port = to_int( string(.panos.source_port) ?? "nonum" ) ?? null
      .source.mac = .panos.source_mac_address
      .source.nat.ip = .panos.nat_source_ip
      .source.nat.port = to_int( string(.paos.nat_source_port) ?? "nonum" ) ?? null
      .source.user.name = .panos.source_user
      .source.user.group.name = .panos.dynamic_user_group_name
      .source.bytes = to_int( string(.panos.bytes_sent) ?? "nonum" ) ?? null
      .source.packets = to_int( string(.panos.packets_sent) ?? "nonum" ) ?? null

      # Function to classify an IP address based on its type (IPv4 & IPv6)
      if ip_cidr_contains(["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7"], .source.ip) ?? false {
          .source.ip_type = "private"
      } else if ip_cidr_contains(["127.0.0.0/8", "::1/128"], .source.ip) ?? false {
          .source.ip_type = "loopback"
      } else if ip_cidr_contains(["169.254.0.0/16", "fe80::/10"], .source.ip) ?? false {
          .source.ip_type = "link_local"
      } else if ip_cidr_contains(["224.0.0.0/4", "ff00::/8"], .source.ip) ?? false {
          .source.ip_type = "multicast"
      } else if ip_cidr_contains(["100.64.0.0/10"], .source.ip) ?? false {
          .source.ip_type = "carrier_nat"
      } else if ip_cidr_contains(["192.0.0.0/24", "192.0.2.0/24", "198.51.100.0/24", "203.0.113.0/24", "2001:db8::/32"], .source.ip) ?? false {
          .source.ip_type = "documentation"
      } else if ip_cidr_contains(["240.0.0.0/4", "2001::/23", "4000::/2"], .source.ip) ?? false {
          .source.ip_type = "reserved"
      } else if ip_cidr_contains(["100::/64"], .source.ip) ?? false {
          .source.ip_type = "discard" # IPv6 discard prefix (RFC 6666)
      } else if ip_cidr_contains(["2002::/16"], .source.ip) ?? false {
          .source.ip_type = "6to4_tunnel" # IPv6 6to4 tunneling
      } else if ip_cidr_contains(["::ffff:0:0/96"], .source.ip) ?? false {
          .source.ip_type = "ipv4_mapped" # IPv4-mapped IPv6
      } else if ip_cidr_contains(["::/128"], .source.ip) ?? false {
          .source.ip_type = "unspecified" # Unspecified address (::)
      } else if ip_cidr_contains(["::ffff:0:0:0/96"], .source.ip) ?? false {
          .source.ip_type = "ipv4_translated" # IPv4-translated IPv6
      } else if !is_null(.source.ip) {
          .source.ip_type = "public"
      } #else {
      #    .source.ip_type = "unknown"
      #}

      # destination
      .destination.ip = .panos.destination_address
      .destination.port = to_int( string(.panos.destination_port) ?? "nonum" ) ?? null
      .destination.mac = .panos.destination_mac_address
      .destination.nat.ip = .panos.nat_destination_ip
      .destination.nat.port = to_int( string(.paos.nat_destination_port) ?? "nonum" ) ?? null
      .destination.user.name = .panos.destination_user
      .destination.bytes = to_int( string(.panos.bytes_received) ?? "nonum" ) ?? null
      .destination.packets = to_int( string(.panos.packets_received) ?? "nonum" ) ?? null

      # Function to classify an IP address based on its type (IPv4 & IPv6)
      if ip_cidr_contains(["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7"], .destination.ip) ?? false {
          .destination.ip_type = "private"
      } else if ip_cidr_contains(["127.0.0.0/8", "::1/128"], .destination.ip) ?? false {
          .destination.ip_type = "loopback"
      } else if ip_cidr_contains(["169.254.0.0/16", "fe80::/10"], .destination.ip) ?? false {
          .destination.ip_type = "link_local"
      } else if ip_cidr_contains(["224.0.0.0/4", "ff00::/8"], .destination.ip) ?? false {
          .destination.ip_type = "multicast"
      } else if ip_cidr_contains(["100.64.0.0/10"], .destination.ip) ?? false {
          .destination.ip_type = "carrier_nat"
      } else if ip_cidr_contains(["192.0.0.0/24", "192.0.2.0/24", "198.51.100.0/24", "203.0.113.0/24", "2001:db8::/32"], .destination.ip) ?? false {
          .destination.ip_type = "documentation"
      } else if ip_cidr_contains(["240.0.0.0/4", "2001::/23", "4000::/2"], .destination.ip) ?? false {
          .destination.ip_type = "reserved"
      } else if ip_cidr_contains(["100::/64"], .destination.ip) ?? false {
          .destination.ip_type = "discard" # IPv6 discard prefix (RFC 6666)
      } else if ip_cidr_contains(["2002::/16"], .destination.ip) ?? false {
          .destination.ip_type = "6to4_tunnel" # IPv6 6to4 tunneling
      } else if ip_cidr_contains(["::ffff:0:0/96"], .destination.ip) ?? false {
          .destination.ip_type = "ipv4_mapped" # IPv4-mapped IPv6
      } else if ip_cidr_contains(["::/128"], .destination.ip) ?? false {
          .destination.ip_type = "unspecified" # Unspecified address (::)
      } else if ip_cidr_contains(["::ffff:0:0:0/96"], .destination.ip) ?? false {
          .destination.ip_type = "ipv4_translated" # IPv4-translated IPv6
      } else if !is_null(.destination.ip) {
          .destination.ip_type = "public"
      } #else {
      #    .destination.ip_type = "unknown"
      #}

      # observer
      .observer.egress.interface.name = .panos.outbound_interface
      .observer.ingress.interface.name = .panos.inbound_interface
      .observer.egress.zone.name = .panos.destination_zone
      .observer.ingress.zone.name = .panos.source_zone

      # network
      .network.bytes = to_int( string(.panos.bytes) ?? "nonum" ) ?? null
      .network.packets = to_int( string(.panos.packets) ?? "nonum" ) ?? null
      .network.application = .panos.application
      .network.transport = (to_string(.panos.protocol) ?? null) + (to_string(.panos.ip_protocol) ?? null) ?? null
      .network.iana_number = to_int( string(.fgt.proto) ?? "nonum" ) ?? null
      .network.transport_port = to_string(.network.transport)  + "/" + to_string(.destination.port)
      ## community_id
      #.network.community_id = community_id(source_ip: .source.ip, destination_ip: .destination.ip, source_port: .source.port, destination_port: .destination.port, protocol: .network.iana_number) ??  null

      ## network.direction
      if ip_cidr_contains($INTERNAL_NETWORKS , .source.ip) ?? false {
          .source.isInternal = true
      } else if !is_null(.source.ip) {
          .source.isInternal = false
      }

      if ip_cidr_contains($INTERNAL_NETWORKS , .destination.ip) ?? false {
          .destination.isInternal = true
      } else if !is_null(.destination.ip) {
          .destination.isInternal = false
      }

      if !exists(.source.isInternal) || !exists(.destination.isInternal) {
        .network.direction = null
      } else if ((.source.isInternal) && (.destination.isInternal) ) ?? false {
        .network.direction = "internal"
      } else if ((.source.isInternal) && !to_bool(.destination.isInternal) ) ?? false {
        .network.direction = "outbound"
      } else if (!to_bool(.source.isInternal) && (.destination.isInternal) ) ?? false {
        .network.direction = "inbound"
      } else if (!to_bool(.source.isInternal) && !to_bool(.destination.isInternal) ) ?? false {
        .network.direction = "external"
      } else {
        .network.direction = "unknown"
      }



      # rule
      #.rule.id = .panos.policy_id
      .rule.name = .panos.rule_name
      .rule.uuid = .panos.rule_uuid

      # session
      .session.id = .panos.session_id

      # user_agent
      .user_agent = parse_user_agent(.panos.user_agent) ?? null

      # url
      #.url |= parse_url(.panos.url/filename) ?? {}

      # delete null fields
      . = compact(.)


# Print parsed logs to stdout
sinks:

#  print:
#   type: "console"
#   inputs: ["remap_pan"]
#   encoding:
#        #      codec: "raw_message"
#     codec: "json"
#     json:
#        pretty: true

  vlogs_panos:
    inputs:
      - remap_pan
    type: elasticsearch
    endpoints:
      #- http://${VICTORIA_LOGS_HOSTNAME:-localhost}:${VICTORIA_LOGS_PORT:-9428}/insert/elasticsearch/
      - ${VICTORIA_LOGS_ENDPOINT:-http://localhost:9428}/insert/elasticsearch/
    api_version: v8
    compression: gzip
    healthcheck:
      enabled: false
    query:
      _msg_field: message
      _time_field: timestamp
      _stream_fields: observer.product,observer.type,observer.vendor,observer.name,log.syslog.hostname,panos.device_name,panos.virtual_system,panos.type,panos.threat/content_type,network.direction
    request:
      headers:
        AccountID: "0"
        ProjectID: "0"
    ### For performance optimization. Vector works really well with defaults. Don't use it unless you really need to fine-tune yor ingest.
    buffer:
    - type: memory
      max_events: 12800 # default 500 https://www.elastic.co/docs/reference/fleet/es-output-settings#es-output-settings-performance-tuning-settings
      #when_full: drop_newest #default block
    batch:
      #max_bytes:
      max_events: 1600 # default 1000
      timeout_secs: 5 # default 1

  elastic_panos:
    type: elasticsearch
    inputs:
      - remap_pan
    auth:
      strategy: "basic"
      user: "${ELASTICSEARCH_USER:-elastic}"
      password: "${ELASTICSEARCH_PASS:-myelasticsearchpassword}"
    endpoints:
      #- https://${ELASTICSEARCH_HOSTNAME:-localhost}:${ELASTICSEARCH_PORT:-9200}
      - ${ELASTICSEARCH_ENDPOINT:-https://localhost:9200}
    encoding:
      except_fields:
        - url.query
    mode: "data_stream"
    bulk:
      action: "create"
    data_stream:
      type: "logs"
      dataset: "panos.{{panos.type}}"
      namespace: "default"
    ### For performance optimization. Vector works really well with defaults. Don't use it unless you really need to fine-tune yor ingest.
    buffer:
    - type: memory
      max_events: 12800 # default 500 https://www.elastic.co/docs/reference/fleet/es-output-settings#es-output-settings-performance-tuning-settings
      #when_full: drop_newest #default block
    batch:
      #max_bytes:
      max_events: 1600 # default 1000
      timeout_secs: 5 # default 1

#  quickwit_panos:
#    type: "http"
#    method: "post"
#    inputs:
#      - remap_pan
#    encoding:
#      codec: "json"
#    framing:
#      method: "newline_delimited"
##    uri: "http://${QUICKWIT_HOSTNAME:-localhost}:${QUICKWIT_PORT:-7280}/api/v1/logs-panos.{{panos.type}}/ingest"
#    uri: "${QUICKWIT_ENDPOINT:-http://localhost:7280}/api/v1/logs-panos.{{panos.type}}/ingest"

#  loki_panos:
#    type: loki
#    inputs:
#      - remap_pan
#    endpoint: https://${LOKI_HOSTNAME:-localhost}:${LOKI_PORT:-3100}
#    endpoint: ${LOKI_endpoint:-https://localhost:3100}
#    auth:
#      strategy: "basic"
#      user: "${LOKI_USER:-loki_user}"
#      password: "${LOKI_PASS:-mylokipassword}"
#    encoding:
#      codec: "json"
#    compression: "snappy"
#    labels:
#      "syslog_appname": "{{.log.syslog.appname}}"
#      "syslog_hostname": "{{.log.syslog.hostname}}"
#      "panos_device_name": "{{.panos.device_name}}"
#      "panos_virtual_system": "{{.panos.virtual_system}}"
#      "panos_type": "{{.panos.type}}"
#      "panos_threat/content_type": "{{.panos.threat/content_type}}"
#      #"network_direction": "{{.network.direction}}"
#    #structured_metadata:
#     # "source_ip": "{{source.ip}}"
#     # "destination_ip": "{{destination.ip}}"
#     # "destination_port": "{{destination.port}}"
#     # "network_transport_port": "{{network.transport_port}}"
#    ### For performance optimization. Vector works really well with defaults. Don't use it unless you really need to fine-tune yor ingest.
#    buffer:
#    - type: memory
#      max_events: 12800 # default 500 https://www.elastic.co/docs/reference/fleet/es-output-settings#es-output-settings-performance-tuning-settings
#      #when_full: drop_newest #default block
#    batch:
#      #max_bytes:
#      max_events: 1600 # default 1000
#      timeout_secs: 5 # default 1
