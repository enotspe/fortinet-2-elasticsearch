input {

    ### Fortios v7.0+
    ### Fortigate syslog config
    #config log syslogd setting
    #    set status enable
    #    set server "logstash_IP"
    #    set port 5140
    #	set format rfc5424
    #end

    ### For SDWAN Dashboard
    #config health-check
    #    edit "Google"
    #        set server "8.8.8.8" "8.8.4.4"
    #        set sla-fail-log-period 10
    #        set sla-pass-log-period 30
    #        set members 0
    #        config sla
    #            edit 1
    #                set latency-threshold 100
    #                set jitter-threshold 10
    #                set packetloss-threshold 5
    #            next
    #        end
    #    next
    #end

    ### extended logging on webfilter
    # https://docs.fortinet.com/document/fortigate/6.2.4/fortios-log-message-reference/496081/enabling-extended-logging
    #config webfilter profile
    #    edit "test-webfilter"
    #        set extended-log enable
    #        set web-extended-all-action-log enable
    #    next
    #end

    udp {
        port => 5141
        buffer_size => 131072
#
        add_field => {"[data_stream][type]" => "logs"}
        add_field => {"[data_stream][dataset]" => "fortinet.fortigate"}
        add_field => {"[data_stream][namespace]" => "default"}
#
        source_ip_fieldname => "[observer][ip]"
        add_field => { "[logstash][hostname]" => "${HOSTNAME:no_logstash_hostname}" }
        #tags => [ "fortianalyzer" ]
    }

}

filter {
    mutate {
        add_field => ["[event][created]", "%{@timestamp}"] # event.created: when the event is created by logstash
    }

    grok {
        match => ["[event][original]", "%{SYSLOG5424BASE} +%{GREEDYDATA:[@metadata][message]}"]
        #overwrite => ["message"]
        tag_on_failure => ["fortinet_grok_failure"]
        remove_field => [ "message" ]
    }

    kv {
        source => "[@metadata][message]"
        #value_split => "="
        #field_split => " "
        whitespace => strict
        target => "fgt"
    }


    # 2022-12-11T05:05:56Z # original log
    # ISO8601
    date {
        match => ["[timestamp]", "ISO8601" ]
        target => "@timestamp"
    }

}

output {

    pipeline{
        send_to => "syslog-fortinet-fortigate_2_ecsv2"
    }

}
