input {

    udp {
        port => 5147
        codec => plain { charset => "ASCII" }
#
        add_field => {"[data_stream][type]" => "logs"}
        add_field => {"[data_stream][dataset]" => "fortinet.fortiweb"}
        add_field => {"[data_stream][namespace]" => "default"}
#
        source_ip_fieldname => "[observer][ip]"
        add_field => { "[logstash][hostname]" => "${HOSTNAME:no_logstash_hostname}" }
        #tags => [ "fortianalyzer" ]
    }
}

filter {
    mutate {
        add_field => ["[event][created]", "%{@timestamp}"] # event.created: when the event is created by logstash
    }

    grok {
        match => ["[event][original]", "%{SYSLOG5424PRI:syslog_index}%{GREEDYDATA:[@metadata][message]}"]
        #overwrite => ["message"]
        tag_on_failure => ["fortinet_grok_failure"]
        remove_field => [ "syslog_index" ]
        ecs_compatibility => disabled
    }
    if "fortinet_grok_failure" not in [tags] {
        kv {
            source => "[@metadata][message]"
            value_split => "="
            field_split => " "
            whitespace => strict
            #target => "fwb"
        }

        # forti* without tz: fortiweb, fortimail, forticlient, fortigate 6.0, and any log comming from fortianalyzer
        # date=2022-08-23 time=15:40:22 timezone="(GMT-5:00)Bogota,Lima,Quito" timezone_dayst="GMTa+5" # original log
        # just add tz manually. too much trouble to parte "timezone"

        if ![tz] or "fortianalyzer" in [tags] {
            mutate{
                replace => {"[tz]" => "-0500" }
                add_tag => [ "setting_default_timezone" ]
            }
        }

        #tz="-0500" needs to be converted to tz="-05:00" for ruby on common_ecs pipeline

        mutate  {
                replace => {"[@metadata][timestamp]" => "%{date} %{time} %{tz}"}
            }

        # date=2022-08-23 time=15:40:22 timezone="(GMT-5:00)Bogota,Lima,Quito" timezone_dayst="GMTa+5" # original log
        # 2022-08-23 15:40:22 -0500     #"%{date} %{time} %{tz}"
        # yyyy-MM-dd HH:mm:ss Z
        date {
            match => ["[@metadata][timestamp]", "yyyy-MM-dd HH:mm:ss Z" ]
            target => "@timestamp"
            remove_field => [ "date","time" ]
        }

    }

}
output {

    pipeline{
        send_to => "syslog-fortinet-fortiweb_2_ecs"
    }

}
