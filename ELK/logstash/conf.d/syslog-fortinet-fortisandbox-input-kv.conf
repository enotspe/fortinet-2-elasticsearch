input {

### WARNING, use at your own risk. I don't have any Fortisandbox anymore, I did this pipeline long ago, so many fields and log format may have changed.

    udp {
        port => 5148
        codec => plain { charset => "ASCII" }
#
        add_field => {"[data_stream][type]" => "logs"}
        add_field => {"[data_stream][dataset]" => "fortinet.fortisandbox"}
        add_field => {"[data_stream][namespace]" => "default"}
#
        source_ip_fieldname => "[observer][ip]"
        add_field => { "[logstash][hostname]" => "${HOSTNAME:no_logstash_hostname}" }
        #tags => [ "fortianalyzer" ]
    }

}

filter {
    mutate {
        add_field => ["[event][created]", "%{@timestamp}"] # event.created: when the event is created by logstash
    }

    grok {
        match => ["[event][original]", "%{SYSLOG5424PRI:syslog_index}%{GREEDYDATA:[@metadata][message]}"]
        #overwrite => ["message"]
        tag_on_failure => ["fortinet_grok_failure"]
        remove_field => [ "syslog_index" ]
        ecs_compatibility => disabled
    }
    if "fortinet_grok_failure" not in [tags] {
        kv {
            source => "[@metadata][message]"
            value_split => "="
            field_split => " "
            whitespace => strict
            #target => "fsa"
        }

        # 6.2 has tz
        # forti* without tz: fortiweb, fortimail, forticlient, fortigate 6.0, and any log comming from fortianalyzer
        if ![tz] or "fortianalyzer" in [tags] {
            mutate{
                replace => {"[tz]" => "-0500" }
                add_tag => [ "setting_default_timezone" ]
            }
        }

        #tz="-0500" needs to be converted to tz="-05:00" for ruby on common_ecs pipeline
        mutate  {
                replace => {"[@metadata][timestamp]" => "%{date}T%{time}Z"}
            }

        #
        date {
            match => ["[@metadata][timestamp]", "ISO8601"]
            target => "@timestamp"
            timezone => "America/Lima"
            remove_field => [ "date","time" ]
        }

    }

}


filter {
    mutate {
        add_field => ["[event][created]", "%{@timestamp}"] # event.created: when the event is created by logstash
    }

    grok {
        match => ["[event][original]", "%{SYSLOG5424PRI:syslog_index}%{GREEDYDATA:[@metadata][message]}"]
        #overwrite => ["message"]
        tag_on_failure => ["fortinet_grok_failure"]
        remove_field => [ "syslog_index" ]
        ecs_compatibility => disabled
    }
    if "fortinet_grok_failure" not in [tags] {
        kv {
            source => "[@metadata][message]"
            value_split => "="
            field_split => " "
            whitespace => strict
            #target => "fortios"
        }

        if "fortianalyzer" in [tags] {
            mutate{
                update => {"[tz]" => "-05:00" }
                replace => {"[@metadata][timestamp]" => "%{date} %{time} %{tz}"}
            }
        }
        if [data_stream][dataset]=="fortinet.fortigate" {
            # 6.2
            #tz="-0500" needs to be converted to tz="-05:00" for ruby on common_ecs pipeline
            if [tz] {
                mutate  {
                    replace => {"[@metadata][timestamp]" => "%{date} %{time} %{tz}"}
                }
            }


        }
        else if [data_stream][dataset]=="fortinet.fortisandbox" {
            # type=event
            if [tzone] {
#                ruby {
#                    code => "event.set('[tz_fsa]', event.get('[tzone]').to_i / 3600 *100 )" # for tzone=-18000 returns tz_sdx=-500, and it should be -0500
#                }
#
                mutate  {
#                    replace => {"[@metadata][timestamp]" => "%{date} %{time} %{tz_fsa}"}
#                    replace => {"[@metadata][timestamp]" => "%{date} %{time}"}
                    replace => {"[@metadata][timestamp]" => "%{date}T%{time}Z" }
                    add_field => {"[event][timezone]" => "-0500" }
                }
            }
#
#           # type=alert
            else {
                mutate{
                    replace => {"[@metadata][timestamp]" => "%{date}T%{time}Z" }
                    add_field => {"[event][timezone]" => "-0500" }
                }
            }
        }

        # forti* without tz: fortiweb, fortimail, forticlient, fortigate 6.0, and any log comming from fortianalyzer
        if ![@metadata][timestamp] {
            mutate{
                add_field => {"[tz]" => "-0500" }
                add_field => {"[event][timezone]" => "America/Lima" }
                add_tag => [ "setting_default_timezone" ]
                add_field => {"[@metadata][timestamp]" => "%{date} %{time} %{[event][timezone]}"}
            }
        }

        # not sure if timezone should be set. Check yourself
        date {
            match => ["[@metadata][timestamp]", "yyyy-MM-dd HH:mm:ss Z" , "yyyy-MM-dd HH:mm:ss ZZ", "yyyy-MM-dd HH:mm:ss ZZZ", "yyyy-MM-dd HH:mm:ss.SSS ZZZ", "yyyy-MM-dd HH:mm:ss", "ISO8601"]
            target => "@timestamp"
            timezone => "America/Lima"
            tag_on_failure => ["_dateparsefailure_%{[@metadata][timestamp]}"]
            remove_field => [ "date","time" ]
        }

    }

}
output {

    pipeline{
        send_to => "syslog-fortinet-fortisandbox_2_ecs"
    }

}
